SHELL := /bin/bash

.PHONY: clean check setup
.DEFAULT_GOAL := help
VENV_DIR = .venv
PYTHON_VERSION = python3.9

check: # Ruff check
	@ruff check .
	@echo "‚úÖ Ki·ªÉm tra ho√†n t·∫•t!"

fix: # Fix auto-fixable linting issues
	@ruff check app.py --fix

clean: # Clean temporary files
	@rm -rf __pycache__ .pytest_cache
	@find . -name '*.pyc' -exec rm -r {} +
	@find . -name '__pycache__' -exec rm -r {} +
	@rm -rf build dist
	@find . -name '*.egg-info' -type d -exec rm -r {} +

run: # Run the application
	@uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

setup: # Initial project setup
	@echo "T·∫°o m√¥i tr∆∞·ªùng ·∫£o t·∫°i: $(VENV_DIR)"
	@$(PYTHON_VERSION) -m venv $(VENV_DIR)
	@echo "C√†i ƒë·∫∑t c√°c ph·ª• thu·ªôc..."
	@source $(VENV_DIR)/bin/activate && pip install -r requirements.txt
	@echo -e "\n‚úÖ Xong.\nüéâ Ch·∫°y c√°c l·ªánh sau ƒë·ªÉ b·∫Øt ƒë·∫ßu:\n\n ‚û°Ô∏è source $(VENV_DIR)/bin/activate\n ‚û°Ô∏è make run\n"

test: # Run tests
	@pytest -xvs tests/

setup-gpu: # Setup GPU for optimal performance
	@echo "C·∫•u h√¨nh GPU..."
	@source $(VENV_DIR)/bin/activate && python -m app.utils.gpu_setup
	@echo "‚úÖ C·∫•u h√¨nh GPU ho√†n t·∫•t!"

download-models: # Download required AI models
	@echo "T·∫£i xu·ªëng c√°c m√¥ h√¨nh AI..."
	@source $(VENV_DIR)/bin/activate && python -m app.utils.download_models
	@echo "‚úÖ T·∫£i m√¥ h√¨nh ho√†n t·∫•t!"

deploy: # Deploy application
	@echo "Tri·ªÉn khai ·ª©ng d·ª•ng..."
	@echo "‚úÖ Tri·ªÉn khai ho√†n t·∫•t!"

help: # Show this help
	@egrep -h '\s#\s' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = ":.*?# "}; {printf "\033[36m%-20s\033[0m %s\n", $$1, $$2}'